---


- name: Install and configure Elasticsearch
  hosts: all
  become: yes
  user: root  # Run tasks as root
  gather_facts: yes
  tasks:
    # - name: Install Java
    #   yum:
    #     name: java-11-openjdk
    #     state: present

    # - name: Ensure /etc/hosts entries for Elasticsearch nodes
    #   lineinfile:
    #     path: /etc/hosts
    #     line: "{{ item.ip }} {{ item.hostname }} {{ item.hostname }}"
    #     state: present
    #   with_items: "{{ es_cluster.first_node + es_cluster.second_node + es_cluster.third_node }}"

    #                 # - name: Add Elasticsearch GPG Key
    #                 #   rpm_key:
    #                 #     key: https://artifacts.elastic.co/GPG-KEY-elasticsearch

    #                 # - name: Add Elasticsearch YUM repository
    #                 #   yum_repository:
    #                 #     name: elasticsearch
    #                 #     description: Elasticsearch repository
    #                 #     baseurl: https://artifacts.elastic.co/packages/7.x/yum
    #                 #     gpgkey: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    #                 #     sslverify: yes  # Equivalent to gpg_check
    #                 #     enabled: yes
      
    # - name: Download Elasticsearch RPM using curl
    #   command: curl -o /tmp/elasticsearch.rpm https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.11.4-x86_64.rpm
    #   args:
    #     creates: /tmp/elasticsearch.rpm
       
          
    
    # - name: Create a systemd drop-in directory for Elasticsearch
    #   file:
    #     path: /etc/systemd/system/elasticsearch.service.d
    #     state: directory
    
    # - name: Install Elasticsearch from RPM
    #   command: yum -y localinstall /tmp/elasticsearch.rpm

    # - name: mkdir /usr/share/elasticsearch/data/directory
    #   file:
    #     path: /usr/share/elasticsearch/data/directory
    #     state: directory
    #     owner: elasticsearch
    #     group: elasticsearch
    #     mode: '0755'

    # - name: Configure Elasticsearch
    #   template:
    #     src: templates/elasticsearch.yml.j2
    #     dest: /etc/elasticsearch/elasticsearch.yml
   
    # - name: Change owner
    #   file:
    #     path: /etc/elasticsearch/elasticsearch.yml
    #     owner: elasticsearch
    #     group: elasticsearch
    #     mode: '0644'
    
    # - name: Create a certificate directory
    #   file:
    #     owner: elasticsearch
    #     group: '{{ elasticsearch_user_group }}'
    #     mode: u=rwx,g+rx,o-rwx
    #     path: '{{ elasticsearch_path_etc }}/{{ elasticsearch_tls_cert_dir }}'
    #     state: directory
    #   when: elasticsearch_tls_cert_dir is defined
    
    # - name: Get IP address of eth1
    #   ansible.builtin.debug:
    #     msg: "{{ ansible_all_ipv4_addresses | select('match', '^192\\.168\\.56\\.') }}"

    # - name: Register IP address of eth1
    #   ansible.builtin.set_fact:
    #     ip_address_eth1: "{{ ansible_all_ipv4_addresses | select('match', '^192\\.168\\.56\\.') | list }}"
    #   when: ansible_all_ipv4_addresses is defined and ansible_all_ipv4_addresses | select('match', '^192\\.168\\.56\\.') | list | length > 0

    # - name: Extract IP address from ip_address_eth1
    #   set_fact:
    #     extracted_ip_address: "{{ ip_address_eth1[0] }}"
    #   when: ip_address_eth1 | length > 0

    # - name: Display extracted IP address
    #   debug:
    #     var: extracted_ip_address

    # - name: Generate openssl.cnf
    #   template:
    #     src: templates/openssl.j2
    #     dest: "{{ elasticsearch_path_etc }}/{{ elasticsearch_tls_cert_dir }}/openssl.cnf"

#If replicaton then doesn't require in the second cluster
    # - name: Generate CA cert
    #   shell:
    #     cmd: |
    #       openssl genrsa -out /etc/elasticsearch/certs/ca.key 2048
    #       openssl req -x509 -new -nodes -key /etc/elasticsearch/certs/ca.key -sha256 -days 3650 -out /etc/elasticsearch/certs/ca.crt -subj "/C=US/ST=State/L=City/O=My Company/CN=Elasticsearch CA"
    #   when: ansible_hostname== 'esrep01'

    - name: Generate Private Key and CSR for Each Node
      command: "openssl genrsa -out /etc/elasticsearch/certs/es.key 2048"
    - name: Generate CSR
      command: "openssl req -new -key /etc/elasticsearch/certs/es.key -out /etc/elasticsearch/certs/es.csr -config /etc/elasticsearch/certs/openssl.cnf"
    - name: Remember to copy ca.crt and ca.key from first node to all nodes
      command: echo ""

    - name: Sign the Certificate for Each Node
      command: "openssl x509 -req -in /etc/elasticsearch/certs/es.csr -CA /etc/elasticsearch/certs/ca.crt -CAkey /etc/elasticsearch/certs/ca.key -CAcreateserial -out /etc/elasticsearch/certs/es.crt -days 3650 -sha256 -extfile /etc/elasticsearch/certs/openssl.cnf -extensions v3_req"
    - name: Restart Elasticsearch Nodes
      command: systemctl restart elasticsearch

    # - name: Set password
    #   template:
    #     src: change_password.sh
    #     dest: "{{ elasticsearch_path_etc }}/{{ elasticsearch_tls_cert_dir }}/change_password.sh"

  # handlers:
  #   - name: Restart Elasticsearch
  #     systemd:
  #       name: elasticsearch
  #       state: restarted
